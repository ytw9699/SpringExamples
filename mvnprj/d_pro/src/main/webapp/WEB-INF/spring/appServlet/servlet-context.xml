<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!--annotation-driven이걸로 패스설정 하는것 -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	
	
	<context:component-scan base-package="com.mycom" />
	<!-- com.mycom패키지에 들어간거 뒤져서 어노테이션(@Controller,@Service,component,repository) 붙은것들 자동스캔 -->
	
	
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>messages.boardMessage_ko</beans:value>
				<!-- <beans:value>messages.adminMessage_ko</beans:value> -->
				<beans:value>messages.memberMessage_ko</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
		<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"></beans:property>
	</beans:bean>
	
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver"> 
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
		<beans:property name="order" value="1"></beans:property> 
	</beans:bean>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles2.SpringBeanPreparerFactory"/>
	</beans:bean>
	
	
	<!-- 파일 업로드용 resolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8" />
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	
	<!-- 인터셉터 -->
	<!-- <mvc:interceptors>
	    <mvc:interceptor> 
	   	   <mvc:mapping path="/admin/**"/> 
	       <beans:bean class="com.mycom.interceptor.InterCeptor"/>
	    </mvc:interceptor>
	    추가로 여러개의 인터셉터 설정 가능 
	    <mvc:interceptor> 
	   	   <mvc:mapping path="/admin/board_write"/> 
	       <bean class="com.spring.interceptor.AdminInterCeptor"/>
	    </mvc:interceptor>
	   
</mvc:interceptors> -->

	<interceptors>
        <interceptor>
            <mapping path="/admin/**" />
         <!--    <exclude-mapping path="/main/*"/>
            <exclude-mapping path="/login/*"/> -->
            <beans:bean class="com.mycom.interceptor.InterCeptor"></beans:bean>            
        </interceptor>        
    </interceptors>
	
</beans:beans>
