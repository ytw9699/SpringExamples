★index.jsp나 main.jsp띄우는 가장 간단한 방법
http://localhost:8080/spring4-chap07/index 경로로 요청이 들어오면 처리하는 방법
http://localhost:8080/spring4-chap07/main 경로로 요청이 들어오면 처리하는 방법

기존의 방법
@Controller
public class IndexController{
@RequestMapping("/index")
public String index(){
return "index";
}
}
하지만 단점은 이거는 한번 밖에 못한다 그래서 여러개 하고싶으면 걍 컨트롤러에서 만들어야함 그래서 메인화면 처음띄우는 1회성 로직임

1. 개선된 첫번째 방법-제일 간단

1)톰캣 서버에 설정 부분을 보면 index.jsp로 경로가 가게끔 설정되있음
	<welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

2)web.xml에 다음과 같이 설정해줘도 되고 안해줘도됨
<!-- <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list> -->
    
3)실행시키면 webapp\index.jsp의 경로에 jsp가 실행됨!

2. 두번째 방법
아래와 같은 설정 필요없이
<!-- <mvc:default-servlet-handler/> -->
<!-- <mvc:annotation-driven /> -->
	
0.톰캣 서버에 설정 부분을 보면 index.jsp로 경로가 가게끔 설정되있음
	<welcome-file-list>
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.htm</welcome-file>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    
1.webapp\index.jsp 이경로에있는 jsp가 실행되고

2.jsp에서 <meta http-equiv="refresh" content="0;url=/spring4-chap07/index">를 실행

3. http://localhost:8080/spring4-chap07/index 요청이 들어가면

4. <mvc:view-controller path="/index" view-name="index" /> 이렇게 잡아둔설정에따라서

5. view-name="index"으로 뷰가 정해지고

6.다음 뷰설정에따라서
<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
</bean>

7.\WEB-INF\view\index.jsp 이 jsp가 최종적으로 실행됨
